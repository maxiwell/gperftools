diff -up gperftools-2.6.1/Makefile.am.aa gperftools-2.6.1/Makefile.am
--- gperftools-2.6.1/Makefile.am.aa	2017-10-11 15:17:39.618807653 -0400
+++ gperftools-2.6.1/Makefile.am	2017-10-11 15:17:59.331338671 -0400
@@ -97,6 +97,7 @@ endif OSX
 if HAVE_OBJCOPY_WEAKEN
 WEAKEN = $(OBJCOPY) -W malloc -W free -W realloc -W calloc -W cfree \
          -W memalign -W posix_memalign -W valloc -W pvalloc \
+         -W aligned_alloc \
          -W malloc_stats -W mallopt -W mallinfo -W nallocx \
          -W _Znwm -W _ZnwmRKSt9nothrow_t -W _Znam -W _ZnamRKSt9nothrow_t \
          -W _ZdlPv -W _ZdaPv \
diff -up gperftools-2.6.1/src/libc_override_gcc_and_weak.h.aa gperftools-2.6.1/src/libc_override_gcc_and_weak.h
--- gperftools-2.6.1/src/libc_override_gcc_and_weak.h.aa	2017-10-11 15:18:32.234555868 -0400
+++ gperftools-2.6.1/src/libc_override_gcc_and_weak.h	2017-10-11 15:18:38.243412911 -0400
@@ -143,6 +143,7 @@ extern "C" {
   void* calloc(size_t n, size_t size) __THROW     ALIAS(tc_calloc);
   void cfree(void* ptr) __THROW                   ALIAS(tc_cfree);
   void* memalign(size_t align, size_t s) __THROW  ALIAS(tc_memalign);
+  void* aligned_alloc(size_t align, size_t s) __THROW ALIAS(tc_memalign);
   void* valloc(size_t size) __THROW               ALIAS(tc_valloc);
   void* pvalloc(size_t size) __THROW              ALIAS(tc_pvalloc);
   int posix_memalign(void** r, size_t a, size_t s) __THROW
diff -up gperftools-2.6.1/src/libc_override_redefine.h.aa gperftools-2.6.1/src/libc_override_redefine.h
--- gperftools-2.6.1/src/libc_override_redefine.h.aa	2017-10-11 15:18:55.012013968 -0400
+++ gperftools-2.6.1/src/libc_override_redefine.h	2017-10-11 15:19:20.528406906 -0400
@@ -71,6 +71,7 @@ extern "C" {
   void* calloc(size_t n, size_t s)               { return tc_calloc(n, s);    }
   void  cfree(void* p)                           { tc_cfree(p);               }
   void* memalign(size_t a, size_t s)             { return tc_memalign(a, s);  }
+  void* aligned_alloc(size_t a, size_t s)        { return tc_memalign(a, s);  }
   void* valloc(size_t s)                         { return tc_valloc(s);       }
   void* pvalloc(size_t s)                        { return tc_pvalloc(s);      }
   int posix_memalign(void** r, size_t a, size_t s)         {
